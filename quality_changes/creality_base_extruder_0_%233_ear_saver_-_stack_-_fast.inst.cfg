[general]
version = 4
name = Ear Saver - STACK - FAST
definition = creality_base

[metadata]
position = 0
type = quality_changes
intent_category = default
quality_type = not_supported
setting_version = 13

[values]
bottom_layers = =999999 if infill_sparse_density == 100 else math.ceil(round(bottom_thickness / resolveOrValue('layer_height'), 4))
brim_line_count = =math.ceil(brim_width / (skirt_brim_line_width * initial_layer_line_width_factor / 100.0))
brim_outside_only = True
brim_width = 4.0
cool_fan_full_layer = 2
cool_fan_speed = =100.0 if cool_fan_enabled else 0.0
cool_fan_speed_0 = 0
cool_fan_speed_max = =cool_fan_speed
gradual_infill_steps = 0
infill_overlap = 40.0
infill_pattern = ='lines' if infill_sparse_density > 50 else 'cubic'
infill_sparse_density = 1
infill_sparse_thickness = =resolveOrValue('layer_height')
ironing_enabled = False
material_flow = 100
material_print_temperature = 200.0
optimize_wall_printing_order = True
retract_at_layer_change = True
retraction_amount = 5
retraction_speed = 45
skin_overlap = 15.0
skirt_brim_minimal_length = 200
speed_infill = =speed_print
speed_ironing = 30
speed_print = 80.0
speed_topbottom = =speed_print / 2
speed_travel = =150.0 if speed_print < 60 else 250.0 if speed_print > 100 else speed_print * 2.5
speed_wall = =speed_print / 2
support_angle = 65
support_bottom_enable = True
support_brim_enable = False
support_brim_line_count = =math.ceil(support_brim_width / (skirt_brim_line_width * initial_layer_line_width_factor / 100.0))
support_brim_width = 2
support_infill_rate = 5
support_infill_sparse_thickness = =resolveOrValue('layer_height')
support_interface_enable = False
support_interface_skip_height = 0.24
support_pattern = lines
support_top_distance = 0.2
support_tree_angle = 20
support_tree_branch_diameter = 1.5
support_tree_branch_diameter_angle = 4
support_tree_branch_distance = 1.5
support_tree_collision_resolution = =support_line_width / 2
support_xy_distance = 0.6
support_z_distance = 0
top_bottom_pattern = lines
top_bottom_thickness = =layer_height_0+layer_height*3
top_layers = =0 if infill_sparse_density == 100 else math.ceil(round(top_thickness / resolveOrValue('layer_height'), 4))
travel_compensate_overlapping_walls_0_enabled = True
wall_line_count = 7
xy_offset = -0.14
xy_offset_layer_0 = =xy_offset
z_seam_position = back
z_seam_type = shortest
zig_zaggify_infill = =infill_pattern == 'cross' or infill_pattern == 'cross_3d'

